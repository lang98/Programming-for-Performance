<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1126" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1109.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1109.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.52%)</title><rect x="0.0000%" y="1029" width="0.5155%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.52%)</title><rect x="0.0000%" y="1013" width="0.5155%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.52%)</title><rect x="0.0000%" y="997" width="0.5155%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.52%)</title><rect x="0.0000%" y="981" width="0.5155%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.52%)</title><rect x="0.0000%" y="965" width="0.5155%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.52%)</title><rect x="0.0000%" y="949" width="0.5155%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.52%)</title><rect x="0.0000%" y="933" width="0.5155%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="943.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.52%)</title><rect x="0.5155%" y="1029" width="0.5155%" height="15" fill="rgb(228,23,34)"/><text x="0.7655%" y="1039.50"></text></g><g><title>[anon] (4 samples, 2.06%)</title><rect x="0.0000%" y="1045" width="2.0619%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="1055.50">[..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (2 samples, 1.03%)</title><rect x="1.0309%" y="1029" width="1.0309%" height="15" fill="rgb(220,122,19)"/><text x="1.2809%" y="1039.50"></text></g><g><title>[lab4] (1 samples, 0.52%)</title><rect x="2.0619%" y="1045" width="0.5155%" height="15" fill="rgb(250,228,42)"/><text x="2.3119%" y="1055.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (1 samples, 0.52%)</title><rect x="2.0619%" y="1029" width="0.5155%" height="15" fill="rgb(240,193,28)"/><text x="2.3119%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="1045" width="0.5155%" height="15" fill="rgb(216,20,37)"/><text x="2.8273%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="1029" width="0.5155%" height="15" fill="rgb(206,188,39)"/><text x="2.8273%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="1013" width="0.5155%" height="15" fill="rgb(217,207,13)"/><text x="2.8273%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="997" width="0.5155%" height="15" fill="rgb(231,73,38)"/><text x="2.8273%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="981" width="0.5155%" height="15" fill="rgb(225,20,46)"/><text x="2.8273%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="965" width="0.5155%" height="15" fill="rgb(210,31,41)"/><text x="2.8273%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="949" width="0.5155%" height="15" fill="rgb(221,200,47)"/><text x="2.8273%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="933" width="0.5155%" height="15" fill="rgb(226,26,5)"/><text x="2.8273%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="917" width="0.5155%" height="15" fill="rgb(249,33,26)"/><text x="2.8273%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="901" width="0.5155%" height="15" fill="rgb(235,183,28)"/><text x="2.8273%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="885" width="0.5155%" height="15" fill="rgb(221,5,38)"/><text x="2.8273%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="869" width="0.5155%" height="15" fill="rgb(247,18,42)"/><text x="2.8273%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="853" width="0.5155%" height="15" fill="rgb(241,131,45)"/><text x="2.8273%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="837" width="0.5155%" height="15" fill="rgb(249,31,29)"/><text x="2.8273%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="2.5773%" y="821" width="0.5155%" height="15" fill="rgb(225,111,53)"/><text x="2.8273%" y="831.50"></text></g><g><title>[unknown] (40 samples, 20.62%)</title><rect x="3.0928%" y="1029" width="20.6186%" height="15" fill="rgb(238,160,17)"/><text x="3.3428%" y="1039.50">[unknown]</text></g><g><title>[unknown] (40 samples, 20.62%)</title><rect x="3.0928%" y="1013" width="20.6186%" height="15" fill="rgb(214,148,48)"/><text x="3.3428%" y="1023.50">[unknown]</text></g><g><title>[unknown] (40 samples, 20.62%)</title><rect x="3.0928%" y="997" width="20.6186%" height="15" fill="rgb(232,36,49)"/><text x="3.3428%" y="1007.50">[unknown]</text></g><g><title>[unknown] (40 samples, 20.62%)</title><rect x="3.0928%" y="981" width="20.6186%" height="15" fill="rgb(209,103,24)"/><text x="3.3428%" y="991.50">[unknown]</text></g><g><title>[unknown] (40 samples, 20.62%)</title><rect x="3.0928%" y="965" width="20.6186%" height="15" fill="rgb(229,88,8)"/><text x="3.3428%" y="975.50">[unknown]</text></g><g><title>[unknown] (40 samples, 20.62%)</title><rect x="3.0928%" y="949" width="20.6186%" height="15" fill="rgb(213,181,19)"/><text x="3.3428%" y="959.50">[unknown]</text></g><g><title>[unknown] (40 samples, 20.62%)</title><rect x="3.0928%" y="933" width="20.6186%" height="15" fill="rgb(254,191,54)"/><text x="3.3428%" y="943.50">[unknown]</text></g><g><title>[unknown] (40 samples, 20.62%)</title><rect x="3.0928%" y="917" width="20.6186%" height="15" fill="rgb(241,83,37)"/><text x="3.3428%" y="927.50">[unknown]</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.52%)</title><rect x="23.7113%" y="773" width="0.5155%" height="15" fill="rgb(233,36,39)"/><text x="23.9613%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.52%)</title><rect x="23.7113%" y="757" width="0.5155%" height="15" fill="rgb(226,3,54)"/><text x="23.9613%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.52%)</title><rect x="23.7113%" y="741" width="0.5155%" height="15" fill="rgb(245,192,40)"/><text x="23.9613%" y="751.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.52%)</title><rect x="23.7113%" y="725" width="0.5155%" height="15" fill="rgb(238,167,29)"/><text x="23.9613%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.52%)</title><rect x="23.7113%" y="709" width="0.5155%" height="15" fill="rgb(232,182,51)"/><text x="23.9613%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.52%)</title><rect x="23.7113%" y="693" width="0.5155%" height="15" fill="rgb(231,60,39)"/><text x="23.9613%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.52%)</title><rect x="23.7113%" y="677" width="0.5155%" height="15" fill="rgb(208,69,12)"/><text x="23.9613%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.52%)</title><rect x="23.7113%" y="661" width="0.5155%" height="15" fill="rgb(235,93,37)"/><text x="23.9613%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.52%)</title><rect x="23.7113%" y="645" width="0.5155%" height="15" fill="rgb(213,116,39)"/><text x="23.9613%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.52%)</title><rect x="23.7113%" y="629" width="0.5155%" height="15" fill="rgb(222,207,29)"/><text x="23.9613%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.52%)</title><rect x="23.7113%" y="613" width="0.5155%" height="15" fill="rgb(206,96,30)"/><text x="23.9613%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 1.03%)</title><rect x="23.7113%" y="789" width="1.0309%" height="15" fill="rgb(218,138,4)"/><text x="23.9613%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.52%)</title><rect x="24.2268%" y="773" width="0.5155%" height="15" fill="rgb(250,191,14)"/><text x="24.4768%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.52%)</title><rect x="24.2268%" y="757" width="0.5155%" height="15" fill="rgb(239,60,40)"/><text x="24.4768%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.52%)</title><rect x="24.2268%" y="741" width="0.5155%" height="15" fill="rgb(206,27,48)"/><text x="24.4768%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.52%)</title><rect x="24.2268%" y="725" width="0.5155%" height="15" fill="rgb(225,35,8)"/><text x="24.4768%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.52%)</title><rect x="24.2268%" y="709" width="0.5155%" height="15" fill="rgb(250,213,24)"/><text x="24.4768%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.52%)</title><rect x="24.2268%" y="693" width="0.5155%" height="15" fill="rgb(247,123,22)"/><text x="24.4768%" y="703.50"></text></g><g><title>heap_trim (1 samples, 0.52%)</title><rect x="24.2268%" y="677" width="0.5155%" height="15" fill="rgb(231,138,38)"/><text x="24.4768%" y="687.50"></text></g><g><title>shrink_heap (1 samples, 0.52%)</title><rect x="24.2268%" y="661" width="0.5155%" height="15" fill="rgb(231,145,46)"/><text x="24.4768%" y="671.50"></text></g><g><title>__GI_madvise (1 samples, 0.52%)</title><rect x="24.2268%" y="645" width="0.5155%" height="15" fill="rgb(251,118,11)"/><text x="24.4768%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="629" width="0.5155%" height="15" fill="rgb(217,147,25)"/><text x="24.4768%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="613" width="0.5155%" height="15" fill="rgb(247,81,37)"/><text x="24.4768%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="597" width="0.5155%" height="15" fill="rgb(209,12,38)"/><text x="24.4768%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="581" width="0.5155%" height="15" fill="rgb(227,1,9)"/><text x="24.4768%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="565" width="0.5155%" height="15" fill="rgb(248,47,43)"/><text x="24.4768%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="549" width="0.5155%" height="15" fill="rgb(221,10,30)"/><text x="24.4768%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="533" width="0.5155%" height="15" fill="rgb(210,229,1)"/><text x="24.4768%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="517" width="0.5155%" height="15" fill="rgb(222,148,37)"/><text x="24.4768%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="501" width="0.5155%" height="15" fill="rgb(234,67,33)"/><text x="24.4768%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="485" width="0.5155%" height="15" fill="rgb(247,98,35)"/><text x="24.4768%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="469" width="0.5155%" height="15" fill="rgb(247,138,52)"/><text x="24.4768%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="24.2268%" y="453" width="0.5155%" height="15" fill="rgb(213,79,30)"/><text x="24.4768%" y="463.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 2.58%)</title><rect x="26.8041%" y="373" width="2.5773%" height="15" fill="rgb(246,177,23)"/><text x="27.0541%" y="383.50">__..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="357" width="2.5773%" height="15" fill="rgb(230,62,27)"/><text x="27.0541%" y="367.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="341" width="2.5773%" height="15" fill="rgb(216,154,8)"/><text x="27.0541%" y="351.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="325" width="2.5773%" height="15" fill="rgb(244,35,45)"/><text x="27.0541%" y="335.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="309" width="2.5773%" height="15" fill="rgb(251,115,12)"/><text x="27.0541%" y="319.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="293" width="2.5773%" height="15" fill="rgb(240,54,50)"/><text x="27.0541%" y="303.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="277" width="2.5773%" height="15" fill="rgb(233,84,52)"/><text x="27.0541%" y="287.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="261" width="2.5773%" height="15" fill="rgb(207,117,47)"/><text x="27.0541%" y="271.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="245" width="2.5773%" height="15" fill="rgb(249,43,39)"/><text x="27.0541%" y="255.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="229" width="2.5773%" height="15" fill="rgb(209,38,44)"/><text x="27.0541%" y="239.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="213" width="2.5773%" height="15" fill="rgb(236,212,23)"/><text x="27.0541%" y="223.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="197" width="2.5773%" height="15" fill="rgb(242,79,21)"/><text x="27.0541%" y="207.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="181" width="2.5773%" height="15" fill="rgb(211,96,35)"/><text x="27.0541%" y="191.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="165" width="2.5773%" height="15" fill="rgb(253,215,40)"/><text x="27.0541%" y="175.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="26.8041%" y="149" width="2.5773%" height="15" fill="rgb(211,81,21)"/><text x="27.0541%" y="159.50">[u..</text></g><g><title>__lll_unlock_wake_private (2 samples, 1.03%)</title><rect x="29.3814%" y="373" width="1.0309%" height="15" fill="rgb(208,190,38)"/><text x="29.6314%" y="383.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="29.3814%" y="357" width="1.0309%" height="15" fill="rgb(235,213,38)"/><text x="29.6314%" y="367.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="29.3814%" y="341" width="1.0309%" height="15" fill="rgb(237,122,38)"/><text x="29.6314%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="29.8969%" y="325" width="0.5155%" height="15" fill="rgb(244,218,35)"/><text x="30.1469%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="29.8969%" y="309" width="0.5155%" height="15" fill="rgb(240,68,47)"/><text x="30.1469%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="29.8969%" y="293" width="0.5155%" height="15" fill="rgb(210,16,53)"/><text x="30.1469%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="29.8969%" y="277" width="0.5155%" height="15" fill="rgb(235,124,12)"/><text x="30.1469%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="29.8969%" y="261" width="0.5155%" height="15" fill="rgb(224,169,11)"/><text x="30.1469%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="29.8969%" y="245" width="0.5155%" height="15" fill="rgb(250,166,2)"/><text x="30.1469%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="29.8969%" y="229" width="0.5155%" height="15" fill="rgb(242,216,29)"/><text x="30.1469%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="29.8969%" y="213" width="0.5155%" height="15" fill="rgb(230,116,27)"/><text x="30.1469%" y="223.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (14 samples, 7.22%)</title><rect x="23.7113%" y="821" width="7.2165%" height="15" fill="rgb(228,99,48)"/><text x="23.9613%" y="831.50">lab4::idea..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (14 samples, 7.22%)</title><rect x="23.7113%" y="805" width="7.2165%" height="15" fill="rgb(253,11,6)"/><text x="23.9613%" y="815.50">lab4::idea..</text></g><g><title>lab4::idea::IdeaGenerator::cross_product (12 samples, 6.19%)</title><rect x="24.7423%" y="789" width="6.1856%" height="15" fill="rgb(247,143,39)"/><text x="24.9923%" y="799.50">lab4::id..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 6.19%)</title><rect x="24.7423%" y="773" width="6.1856%" height="15" fill="rgb(236,97,10)"/><text x="24.9923%" y="783.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 6.19%)</title><rect x="24.7423%" y="757" width="6.1856%" height="15" fill="rgb(233,208,19)"/><text x="24.9923%" y="767.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 6.19%)</title><rect x="24.7423%" y="741" width="6.1856%" height="15" fill="rgb(216,164,2)"/><text x="24.9923%" y="751.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 6.19%)</title><rect x="24.7423%" y="725" width="6.1856%" height="15" fill="rgb(220,129,5)"/><text x="24.9923%" y="735.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 6.19%)</title><rect x="24.7423%" y="709" width="6.1856%" height="15" fill="rgb(242,17,10)"/><text x="24.9923%" y="719.50">&lt;alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12 samples, 6.19%)</title><rect x="24.7423%" y="693" width="6.1856%" height="15" fill="rgb(242,107,0)"/><text x="24.9923%" y="703.50">alloc::v..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 6.19%)</title><rect x="24.7423%" y="677" width="6.1856%" height="15" fill="rgb(251,28,31)"/><text x="24.9923%" y="687.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 6.19%)</title><rect x="24.7423%" y="661" width="6.1856%" height="15" fill="rgb(233,223,10)"/><text x="24.9923%" y="671.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 5.67%)</title><rect x="25.2577%" y="645" width="5.6701%" height="15" fill="rgb(215,21,27)"/><text x="25.5077%" y="655.50">&lt;core::..</text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 5.67%)</title><rect x="25.2577%" y="629" width="5.6701%" height="15" fill="rgb(232,23,21)"/><text x="25.5077%" y="639.50">core::o..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 5.67%)</title><rect x="25.2577%" y="613" width="5.6701%" height="15" fill="rgb(244,5,23)"/><text x="25.5077%" y="623.50">core::o..</text></g><g><title>lab4::idea::IdeaGenerator::cross_product::_{{closure}}::_{{closure}} (11 samples, 5.67%)</title><rect x="25.2577%" y="597" width="5.6701%" height="15" fill="rgb(226,81,46)"/><text x="25.5077%" y="607.50">lab4::i..</text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (11 samples, 5.67%)</title><rect x="25.2577%" y="581" width="5.6701%" height="15" fill="rgb(247,70,30)"/><text x="25.5077%" y="591.50">&lt;T as a..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 5.67%)</title><rect x="25.2577%" y="565" width="5.6701%" height="15" fill="rgb(212,68,19)"/><text x="25.5077%" y="575.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 5.67%)</title><rect x="25.2577%" y="549" width="5.6701%" height="15" fill="rgb(240,187,13)"/><text x="25.5077%" y="559.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 5.67%)</title><rect x="25.2577%" y="533" width="5.6701%" height="15" fill="rgb(223,113,26)"/><text x="25.5077%" y="543.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (11 samples, 5.67%)</title><rect x="25.2577%" y="517" width="5.6701%" height="15" fill="rgb(206,192,2)"/><text x="25.5077%" y="527.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 5.67%)</title><rect x="25.2577%" y="501" width="5.6701%" height="15" fill="rgb(241,108,4)"/><text x="25.5077%" y="511.50">&lt;T as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 5.67%)</title><rect x="25.2577%" y="485" width="5.6701%" height="15" fill="rgb(247,173,49)"/><text x="25.5077%" y="495.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 5.67%)</title><rect x="25.2577%" y="469" width="5.6701%" height="15" fill="rgb(224,114,35)"/><text x="25.5077%" y="479.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 5.67%)</title><rect x="25.2577%" y="453" width="5.6701%" height="15" fill="rgb(245,159,27)"/><text x="25.5077%" y="463.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 5.67%)</title><rect x="25.2577%" y="437" width="5.6701%" height="15" fill="rgb(245,172,44)"/><text x="25.5077%" y="447.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 5.67%)</title><rect x="25.2577%" y="421" width="5.6701%" height="15" fill="rgb(236,23,11)"/><text x="25.5077%" y="431.50">alloc::..</text></g><g><title>alloc::alloc::alloc (11 samples, 5.67%)</title><rect x="25.2577%" y="405" width="5.6701%" height="15" fill="rgb(205,117,38)"/><text x="25.5077%" y="415.50">alloc::..</text></g><g><title>__GI___libc_malloc (11 samples, 5.67%)</title><rect x="25.2577%" y="389" width="5.6701%" height="15" fill="rgb(237,72,25)"/><text x="25.5077%" y="399.50">__GI___..</text></g><g><title>_int_malloc (1 samples, 0.52%)</title><rect x="30.4124%" y="373" width="0.5155%" height="15" fill="rgb(244,70,9)"/><text x="30.6624%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::cycle::Cycle&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.03%)</title><rect x="30.9278%" y="773" width="1.0309%" height="15" fill="rgb(217,125,39)"/><text x="31.1778%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.03%)</title><rect x="30.9278%" y="757" width="1.0309%" height="15" fill="rgb(235,36,10)"/><text x="31.1778%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (3 samples, 1.55%)</title><rect x="30.9278%" y="805" width="1.5464%" height="15" fill="rgb(251,123,47)"/><text x="31.1778%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (3 samples, 1.55%)</title><rect x="30.9278%" y="789" width="1.5464%" height="15" fill="rgb(221,13,13)"/><text x="31.1778%" y="799.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.52%)</title><rect x="31.9588%" y="773" width="0.5155%" height="15" fill="rgb(238,131,9)"/><text x="32.2088%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.52%)</title><rect x="31.9588%" y="757" width="0.5155%" height="15" fill="rgb(211,50,8)"/><text x="32.2088%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (1 samples, 0.52%)</title><rect x="32.4742%" y="501" width="0.5155%" height="15" fill="rgb(245,182,24)"/><text x="32.7242%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (1 samples, 0.52%)</title><rect x="32.4742%" y="485" width="0.5155%" height="15" fill="rgb(242,14,37)"/><text x="32.7242%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::_{{closure}} (1 samples, 0.52%)</title><rect x="32.4742%" y="469" width="0.5155%" height="15" fill="rgb(246,228,12)"/><text x="32.7242%" y="479.50"></text></g><g><title>hex::val (1 samples, 0.52%)</title><rect x="32.4742%" y="453" width="0.5155%" height="15" fill="rgb(213,55,15)"/><text x="32.7242%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 1.03%)</title><rect x="32.4742%" y="597" width="1.0309%" height="15" fill="rgb(209,9,3)"/><text x="32.7242%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 1.03%)</title><rect x="32.4742%" y="581" width="1.0309%" height="15" fill="rgb(230,59,30)"/><text x="32.7242%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.03%)</title><rect x="32.4742%" y="565" width="1.0309%" height="15" fill="rgb(209,121,21)"/><text x="32.7242%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.03%)</title><rect x="32.4742%" y="549" width="1.0309%" height="15" fill="rgb(220,109,13)"/><text x="32.7242%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 1.03%)</title><rect x="32.4742%" y="533" width="1.0309%" height="15" fill="rgb(232,18,1)"/><text x="32.7242%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 1.03%)</title><rect x="32.4742%" y="517" width="1.0309%" height="15" fill="rgb(215,41,42)"/><text x="32.7242%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.52%)</title><rect x="32.9897%" y="501" width="0.5155%" height="15" fill="rgb(224,123,36)"/><text x="33.2397%" y="511.50"></text></g><g><title>lab4::checksum::Checksum::update (3 samples, 1.55%)</title><rect x="32.4742%" y="805" width="1.5464%" height="15" fill="rgb(240,125,3)"/><text x="32.7242%" y="815.50"></text></g><g><title>hex::decode (3 samples, 1.55%)</title><rect x="32.4742%" y="789" width="1.5464%" height="15" fill="rgb(205,98,50)"/><text x="32.7242%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (3 samples, 1.55%)</title><rect x="32.4742%" y="773" width="1.5464%" height="15" fill="rgb(205,185,37)"/><text x="32.7242%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 1.55%)</title><rect x="32.4742%" y="757" width="1.5464%" height="15" fill="rgb(238,207,15)"/><text x="32.7242%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3 samples, 1.55%)</title><rect x="32.4742%" y="741" width="1.5464%" height="15" fill="rgb(213,199,42)"/><text x="32.7242%" y="751.50"></text></g><g><title>core::iter::adapters::process_results (3 samples, 1.55%)</title><rect x="32.4742%" y="725" width="1.5464%" height="15" fill="rgb(235,201,11)"/><text x="32.7242%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (3 samples, 1.55%)</title><rect x="32.4742%" y="709" width="1.5464%" height="15" fill="rgb(207,46,11)"/><text x="32.7242%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 1.55%)</title><rect x="32.4742%" y="693" width="1.5464%" height="15" fill="rgb(241,35,35)"/><text x="32.7242%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 1.55%)</title><rect x="32.4742%" y="677" width="1.5464%" height="15" fill="rgb(243,32,47)"/><text x="32.7242%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 1.55%)</title><rect x="32.4742%" y="661" width="1.5464%" height="15" fill="rgb(247,202,23)"/><text x="32.7242%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 1.55%)</title><rect x="32.4742%" y="645" width="1.5464%" height="15" fill="rgb(219,102,11)"/><text x="32.7242%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 1.55%)</title><rect x="32.4742%" y="629" width="1.5464%" height="15" fill="rgb(243,110,44)"/><text x="32.7242%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 1.55%)</title><rect x="32.4742%" y="613" width="1.5464%" height="15" fill="rgb(222,74,54)"/><text x="32.7242%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.52%)</title><rect x="33.5052%" y="597" width="0.5155%" height="15" fill="rgb(216,99,12)"/><text x="33.7552%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.52%)</title><rect x="33.5052%" y="581" width="0.5155%" height="15" fill="rgb(226,22,26)"/><text x="33.7552%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.52%)</title><rect x="33.5052%" y="565" width="0.5155%" height="15" fill="rgb(217,163,10)"/><text x="33.7552%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.52%)</title><rect x="33.5052%" y="549" width="0.5155%" height="15" fill="rgb(213,25,53)"/><text x="33.7552%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.52%)</title><rect x="33.5052%" y="533" width="0.5155%" height="15" fill="rgb(252,105,26)"/><text x="33.7552%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.52%)</title><rect x="33.5052%" y="517" width="0.5155%" height="15" fill="rgb(220,39,43)"/><text x="33.7552%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.52%)</title><rect x="33.5052%" y="501" width="0.5155%" height="15" fill="rgb(229,68,48)"/><text x="33.7552%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.52%)</title><rect x="33.5052%" y="485" width="0.5155%" height="15" fill="rgb(252,8,32)"/><text x="33.7552%" y="495.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.52%)</title><rect x="33.5052%" y="469" width="0.5155%" height="15" fill="rgb(223,20,43)"/><text x="33.7552%" y="479.50"></text></g><g><title>__lll_unlock_wake_private (1 samples, 0.52%)</title><rect x="33.5052%" y="453" width="0.5155%" height="15" fill="rgb(229,81,49)"/><text x="33.7552%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="33.5052%" y="437" width="0.5155%" height="15" fill="rgb(236,28,36)"/><text x="33.7552%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="33.5052%" y="421" width="0.5155%" height="15" fill="rgb(249,185,26)"/><text x="33.7552%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="33.5052%" y="405" width="0.5155%" height="15" fill="rgb(249,174,33)"/><text x="33.7552%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="33.5052%" y="389" width="0.5155%" height="15" fill="rgb(233,201,37)"/><text x="33.7552%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="33.5052%" y="373" width="0.5155%" height="15" fill="rgb(221,78,26)"/><text x="33.7552%" y="383.50"></text></g><g><title>lab4::package::PackageDownloader::run (8 samples, 4.12%)</title><rect x="30.9278%" y="821" width="4.1237%" height="15" fill="rgb(250,127,30)"/><text x="31.1778%" y="831.50">lab4..</text></g><g><title>lab4::checksum::Checksum::with_sha256 (2 samples, 1.03%)</title><rect x="34.0206%" y="805" width="1.0309%" height="15" fill="rgb(230,49,44)"/><text x="34.2706%" y="815.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (2 samples, 1.03%)</title><rect x="34.0206%" y="789" width="1.0309%" height="15" fill="rgb(229,67,23)"/><text x="34.2706%" y="799.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (2 samples, 1.03%)</title><rect x="34.0206%" y="773" width="1.0309%" height="15" fill="rgb(249,83,47)"/><text x="34.2706%" y="783.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (2 samples, 1.03%)</title><rect x="34.0206%" y="757" width="1.0309%" height="15" fill="rgb(215,43,3)"/><text x="34.2706%" y="767.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (2 samples, 1.03%)</title><rect x="34.0206%" y="741" width="1.0309%" height="15" fill="rgb(238,154,13)"/><text x="34.2706%" y="751.50"></text></g><g><title>sha2::sha256::Engine256::finish (2 samples, 1.03%)</title><rect x="34.0206%" y="725" width="1.0309%" height="15" fill="rgb(219,56,2)"/><text x="34.2706%" y="735.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (2 samples, 1.03%)</title><rect x="34.0206%" y="709" width="1.0309%" height="15" fill="rgb(233,0,4)"/><text x="34.2706%" y="719.50"></text></g><g><title>sha2::sha256::Engine256::finish::_{{closure}} (2 samples, 1.03%)</title><rect x="34.0206%" y="693" width="1.0309%" height="15" fill="rgb(235,30,7)"/><text x="34.2706%" y="703.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 1.03%)</title><rect x="34.0206%" y="677" width="1.0309%" height="15" fill="rgb(250,79,13)"/><text x="34.2706%" y="687.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 1.03%)</title><rect x="34.0206%" y="661" width="1.0309%" height="15" fill="rgb(211,146,34)"/><text x="34.2706%" y="671.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 1.03%)</title><rect x="34.0206%" y="645" width="1.0309%" height="15" fill="rgb(228,22,38)"/><text x="34.2706%" y="655.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 1.03%)</title><rect x="34.0206%" y="629" width="1.0309%" height="15" fill="rgb(235,168,5)"/><text x="34.2706%" y="639.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 1.03%)</title><rect x="34.0206%" y="613" width="1.0309%" height="15" fill="rgb(221,155,16)"/><text x="34.2706%" y="623.50"></text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="789" width="2.5773%" height="15" fill="rgb(215,215,53)"/><text x="36.3325%" y="799.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="773" width="2.5773%" height="15" fill="rgb(223,4,10)"/><text x="36.3325%" y="783.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="757" width="2.5773%" height="15" fill="rgb(234,103,6)"/><text x="36.3325%" y="767.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="741" width="2.5773%" height="15" fill="rgb(227,97,0)"/><text x="36.3325%" y="751.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="725" width="2.5773%" height="15" fill="rgb(234,150,53)"/><text x="36.3325%" y="735.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="709" width="2.5773%" height="15" fill="rgb(228,201,54)"/><text x="36.3325%" y="719.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="693" width="2.5773%" height="15" fill="rgb(222,22,37)"/><text x="36.3325%" y="703.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="677" width="2.5773%" height="15" fill="rgb(237,53,32)"/><text x="36.3325%" y="687.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="661" width="2.5773%" height="15" fill="rgb(233,25,53)"/><text x="36.3325%" y="671.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="645" width="2.5773%" height="15" fill="rgb(210,40,34)"/><text x="36.3325%" y="655.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="36.0825%" y="629" width="2.5773%" height="15" fill="rgb(241,220,44)"/><text x="36.3325%" y="639.50">[u..</text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 8.25%)</title><rect x="39.6907%" y="757" width="8.2474%" height="15" fill="rgb(235,28,35)"/><text x="39.9407%" y="767.50">core::sync:..</text></g><g><title>core::sync::atomic::atomic_load (16 samples, 8.25%)</title><rect x="39.6907%" y="741" width="8.2474%" height="15" fill="rgb(210,56,17)"/><text x="39.9407%" y="751.50">core::sync:..</text></g><g><title>[unknown] (11 samples, 5.67%)</title><rect x="42.2680%" y="725" width="5.6701%" height="15" fill="rgb(224,130,29)"/><text x="42.5180%" y="735.50">[unknow..</text></g><g><title>[unknown] (11 samples, 5.67%)</title><rect x="42.2680%" y="709" width="5.6701%" height="15" fill="rgb(235,212,8)"/><text x="42.5180%" y="719.50">[unknow..</text></g><g><title>[unknown] (10 samples, 5.15%)</title><rect x="42.7835%" y="693" width="5.1546%" height="15" fill="rgb(223,33,50)"/><text x="43.0335%" y="703.50">[unkno..</text></g><g><title>[unknown] (10 samples, 5.15%)</title><rect x="42.7835%" y="677" width="5.1546%" height="15" fill="rgb(219,149,13)"/><text x="43.0335%" y="687.50">[unkno..</text></g><g><title>[unknown] (10 samples, 5.15%)</title><rect x="42.7835%" y="661" width="5.1546%" height="15" fill="rgb(250,156,29)"/><text x="43.0335%" y="671.50">[unkno..</text></g><g><title>[unknown] (10 samples, 5.15%)</title><rect x="42.7835%" y="645" width="5.1546%" height="15" fill="rgb(216,193,19)"/><text x="43.0335%" y="655.50">[unkno..</text></g><g><title>[unknown] (10 samples, 5.15%)</title><rect x="42.7835%" y="629" width="5.1546%" height="15" fill="rgb(216,135,14)"/><text x="43.0335%" y="639.50">[unkno..</text></g><g><title>[unknown] (10 samples, 5.15%)</title><rect x="42.7835%" y="613" width="5.1546%" height="15" fill="rgb(241,47,5)"/><text x="43.0335%" y="623.50">[unkno..</text></g><g><title>[unknown] (10 samples, 5.15%)</title><rect x="42.7835%" y="597" width="5.1546%" height="15" fill="rgb(233,42,35)"/><text x="43.0335%" y="607.50">[unkno..</text></g><g><title>[unknown] (10 samples, 5.15%)</title><rect x="42.7835%" y="581" width="5.1546%" height="15" fill="rgb(231,13,6)"/><text x="43.0335%" y="591.50">[unkno..</text></g><g><title>[unknown] (10 samples, 5.15%)</title><rect x="42.7835%" y="565" width="5.1546%" height="15" fill="rgb(207,181,40)"/><text x="43.0335%" y="575.50">[unkno..</text></g><g><title>core::sync::atomic::fence (21 samples, 10.82%)</title><rect x="47.9381%" y="757" width="10.8247%" height="15" fill="rgb(254,173,49)"/><text x="48.1881%" y="767.50">core::sync::atom..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (1 samples, 0.52%)</title><rect x="58.7629%" y="757" width="0.5155%" height="15" fill="rgb(221,1,38)"/><text x="59.0129%" y="767.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.52%)</title><rect x="58.7629%" y="741" width="0.5155%" height="15" fill="rgb(206,124,46)"/><text x="59.0129%" y="751.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.52%)</title><rect x="58.7629%" y="725" width="0.5155%" height="15" fill="rgb(249,21,11)"/><text x="59.0129%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.52%)</title><rect x="58.7629%" y="709" width="0.5155%" height="15" fill="rgb(222,201,40)"/><text x="59.0129%" y="719.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (48 samples, 24.74%)</title><rect x="35.0515%" y="805" width="24.7423%" height="15" fill="rgb(235,61,29)"/><text x="35.3015%" y="815.50">crossbeam_channel::channel::Receiver&lt;T&gt;..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (41 samples, 21.13%)</title><rect x="38.6598%" y="789" width="21.1340%" height="15" fill="rgb(219,207,3)"/><text x="38.9098%" y="799.50">crossbeam_channel::flavors::list:..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (40 samples, 20.62%)</title><rect x="39.1753%" y="773" width="20.6186%" height="15" fill="rgb(222,56,46)"/><text x="39.4253%" y="783.50">crossbeam_channel::flavors::list..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (1 samples, 0.52%)</title><rect x="59.2784%" y="757" width="0.5155%" height="15" fill="rgb(239,76,54)"/><text x="59.5284%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.52%)</title><rect x="59.7938%" y="773" width="0.5155%" height="15" fill="rgb(231,124,27)"/><text x="60.0438%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.52%)</title><rect x="59.7938%" y="757" width="0.5155%" height="15" fill="rgb(249,195,6)"/><text x="60.0438%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.52%)</title><rect x="59.7938%" y="741" width="0.5155%" height="15" fill="rgb(237,174,47)"/><text x="60.0438%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.52%)</title><rect x="59.7938%" y="725" width="0.5155%" height="15" fill="rgb(206,201,31)"/><text x="60.0438%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.52%)</title><rect x="59.7938%" y="709" width="0.5155%" height="15" fill="rgb(231,57,52)"/><text x="60.0438%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.52%)</title><rect x="59.7938%" y="693" width="0.5155%" height="15" fill="rgb(248,177,22)"/><text x="60.0438%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.52%)</title><rect x="59.7938%" y="677" width="0.5155%" height="15" fill="rgb(215,211,37)"/><text x="60.0438%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.52%)</title><rect x="59.7938%" y="661" width="0.5155%" height="15" fill="rgb(241,128,51)"/><text x="60.0438%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.52%)</title><rect x="59.7938%" y="645" width="0.5155%" height="15" fill="rgb(227,165,31)"/><text x="60.0438%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.52%)</title><rect x="59.7938%" y="629" width="0.5155%" height="15" fill="rgb(228,167,24)"/><text x="60.0438%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 2.06%)</title><rect x="60.3093%" y="581" width="2.0619%" height="15" fill="rgb(228,143,12)"/><text x="60.5593%" y="591.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 2.06%)</title><rect x="60.3093%" y="565" width="2.0619%" height="15" fill="rgb(249,149,8)"/><text x="60.5593%" y="575.50">c..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 2.06%)</title><rect x="60.3093%" y="549" width="2.0619%" height="15" fill="rgb(243,35,44)"/><text x="60.5593%" y="559.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 2.06%)</title><rect x="60.3093%" y="533" width="2.0619%" height="15" fill="rgb(246,89,9)"/><text x="60.5593%" y="543.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 2.06%)</title><rect x="60.3093%" y="517" width="2.0619%" height="15" fill="rgb(233,213,13)"/><text x="60.5593%" y="527.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 2.06%)</title><rect x="60.3093%" y="501" width="2.0619%" height="15" fill="rgb(233,141,41)"/><text x="60.5593%" y="511.50">c..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (4 samples, 2.06%)</title><rect x="60.3093%" y="485" width="2.0619%" height="15" fill="rgb(239,167,4)"/><text x="60.5593%" y="495.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (4 samples, 2.06%)</title><rect x="60.3093%" y="469" width="2.0619%" height="15" fill="rgb(209,217,16)"/><text x="60.5593%" y="479.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::_{{closure}} (4 samples, 2.06%)</title><rect x="60.3093%" y="453" width="2.0619%" height="15" fill="rgb(219,88,35)"/><text x="60.5593%" y="463.50">&lt;..</text></g><g><title>hex::val (3 samples, 1.55%)</title><rect x="60.8247%" y="437" width="1.5464%" height="15" fill="rgb(220,193,23)"/><text x="61.0747%" y="447.50"></text></g><g><title>__lll_lock_wait_private (43 samples, 22.16%)</title><rect x="62.8866%" y="437" width="22.1649%" height="15" fill="rgb(230,90,52)"/><text x="63.1366%" y="447.50">__lll_lock_wait_private</text></g><g><title>[unknown] (43 samples, 22.16%)</title><rect x="62.8866%" y="421" width="22.1649%" height="15" fill="rgb(252,106,19)"/><text x="63.1366%" y="431.50">[unknown]</text></g><g><title>[unknown] (43 samples, 22.16%)</title><rect x="62.8866%" y="405" width="22.1649%" height="15" fill="rgb(206,74,20)"/><text x="63.1366%" y="415.50">[unknown]</text></g><g><title>[unknown] (43 samples, 22.16%)</title><rect x="62.8866%" y="389" width="22.1649%" height="15" fill="rgb(230,138,44)"/><text x="63.1366%" y="399.50">[unknown]</text></g><g><title>[unknown] (43 samples, 22.16%)</title><rect x="62.8866%" y="373" width="22.1649%" height="15" fill="rgb(235,182,43)"/><text x="63.1366%" y="383.50">[unknown]</text></g><g><title>[unknown] (43 samples, 22.16%)</title><rect x="62.8866%" y="357" width="22.1649%" height="15" fill="rgb(242,16,51)"/><text x="63.1366%" y="367.50">[unknown]</text></g><g><title>[unknown] (43 samples, 22.16%)</title><rect x="62.8866%" y="341" width="22.1649%" height="15" fill="rgb(248,9,4)"/><text x="63.1366%" y="351.50">[unknown]</text></g><g><title>[unknown] (42 samples, 21.65%)</title><rect x="63.4021%" y="325" width="21.6495%" height="15" fill="rgb(210,31,22)"/><text x="63.6521%" y="335.50">[unknown]</text></g><g><title>[unknown] (42 samples, 21.65%)</title><rect x="63.4021%" y="309" width="21.6495%" height="15" fill="rgb(239,54,39)"/><text x="63.6521%" y="319.50">[unknown]</text></g><g><title>[unknown] (42 samples, 21.65%)</title><rect x="63.4021%" y="293" width="21.6495%" height="15" fill="rgb(230,99,41)"/><text x="63.6521%" y="303.50">[unknown]</text></g><g><title>[unknown] (42 samples, 21.65%)</title><rect x="63.4021%" y="277" width="21.6495%" height="15" fill="rgb(253,106,12)"/><text x="63.6521%" y="287.50">[unknown]</text></g><g><title>[unknown] (42 samples, 21.65%)</title><rect x="63.4021%" y="261" width="21.6495%" height="15" fill="rgb(213,46,41)"/><text x="63.6521%" y="271.50">[unknown]</text></g><g><title>[unknown] (42 samples, 21.65%)</title><rect x="63.4021%" y="245" width="21.6495%" height="15" fill="rgb(215,133,35)"/><text x="63.6521%" y="255.50">[unknown]</text></g><g><title>[unknown] (42 samples, 21.65%)</title><rect x="63.4021%" y="229" width="21.6495%" height="15" fill="rgb(213,28,5)"/><text x="63.6521%" y="239.50">[unknown]</text></g><g><title>[unknown] (42 samples, 21.65%)</title><rect x="63.4021%" y="213" width="21.6495%" height="15" fill="rgb(215,77,49)"/><text x="63.6521%" y="223.50">[unknown]</text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="84.0206%" y="197" width="1.0309%" height="15" fill="rgb(248,100,22)"/><text x="84.2706%" y="207.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="84.0206%" y="181" width="1.0309%" height="15" fill="rgb(208,67,9)"/><text x="84.2706%" y="191.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="84.0206%" y="165" width="1.0309%" height="15" fill="rgb(219,133,21)"/><text x="84.2706%" y="175.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="84.0206%" y="149" width="1.0309%" height="15" fill="rgb(246,46,29)"/><text x="84.2706%" y="159.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="84.0206%" y="133" width="1.0309%" height="15" fill="rgb(246,185,52)"/><text x="84.2706%" y="143.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="84.0206%" y="117" width="1.0309%" height="15" fill="rgb(252,136,11)"/><text x="84.2706%" y="127.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="84.0206%" y="101" width="1.0309%" height="15" fill="rgb(219,138,53)"/><text x="84.2706%" y="111.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="84.0206%" y="85" width="1.0309%" height="15" fill="rgb(211,51,23)"/><text x="84.2706%" y="95.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="84.0206%" y="69" width="1.0309%" height="15" fill="rgb(247,221,28)"/><text x="84.2706%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="84.5361%" y="53" width="0.5155%" height="15" fill="rgb(251,222,45)"/><text x="84.7861%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="84.5361%" y="37" width="0.5155%" height="15" fill="rgb(217,162,53)"/><text x="84.7861%" y="47.50"></text></g><g><title>hex::decode (53 samples, 27.32%)</title><rect x="60.3093%" y="773" width="27.3196%" height="15" fill="rgb(229,93,14)"/><text x="60.5593%" y="783.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (53 samples, 27.32%)</title><rect x="60.3093%" y="757" width="27.3196%" height="15" fill="rgb(209,67,49)"/><text x="60.5593%" y="767.50">&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (53 samples, 27.32%)</title><rect x="60.3093%" y="741" width="27.3196%" height="15" fill="rgb(213,87,29)"/><text x="60.5593%" y="751.50">core::iter::traits::iterator::Iterator::coll..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (53 samples, 27.32%)</title><rect x="60.3093%" y="725" width="27.3196%" height="15" fill="rgb(205,151,52)"/><text x="60.5593%" y="735.50">&lt;core::result::Result&lt;V,E&gt; as core::iter::tr..</text></g><g><title>core::iter::adapters::process_results (53 samples, 27.32%)</title><rect x="60.3093%" y="709" width="27.3196%" height="15" fill="rgb(253,215,39)"/><text x="60.5593%" y="719.50">core::iter::adapters::process_results</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (53 samples, 27.32%)</title><rect x="60.3093%" y="693" width="27.3196%" height="15" fill="rgb(221,220,41)"/><text x="60.5593%" y="703.50">&lt;core::result::Result&lt;V,E&gt; as core::iter::tr..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (53 samples, 27.32%)</title><rect x="60.3093%" y="677" width="27.3196%" height="15" fill="rgb(218,133,21)"/><text x="60.5593%" y="687.50">core::iter::traits::iterator::Iterator::coll..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (53 samples, 27.32%)</title><rect x="60.3093%" y="661" width="27.3196%" height="15" fill="rgb(221,193,43)"/><text x="60.5593%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 27.32%)</title><rect x="60.3093%" y="645" width="27.3196%" height="15" fill="rgb(240,128,52)"/><text x="60.5593%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromI..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (53 samples, 27.32%)</title><rect x="60.3093%" y="629" width="27.3196%" height="15" fill="rgb(253,114,12)"/><text x="60.5593%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecFromI..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (53 samples, 27.32%)</title><rect x="60.3093%" y="613" width="27.3196%" height="15" fill="rgb(215,223,47)"/><text x="60.5593%" y="623.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::SpecExt..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (53 samples, 27.32%)</title><rect x="60.3093%" y="597" width="27.3196%" height="15" fill="rgb(248,225,23)"/><text x="60.5593%" y="607.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (49 samples, 25.26%)</title><rect x="62.3711%" y="581" width="25.2577%" height="15" fill="rgb(250,108,0)"/><text x="62.6211%" y="591.50">alloc::vec::Vec&lt;T,A&gt;::reserve</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (49 samples, 25.26%)</title><rect x="62.3711%" y="565" width="25.2577%" height="15" fill="rgb(228,208,7)"/><text x="62.6211%" y="575.50">alloc::raw_vec::RawVec&lt;T,A&gt;::reserve</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (49 samples, 25.26%)</title><rect x="62.3711%" y="549" width="25.2577%" height="15" fill="rgb(244,45,10)"/><text x="62.6211%" y="559.50">alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (49 samples, 25.26%)</title><rect x="62.3711%" y="533" width="25.2577%" height="15" fill="rgb(207,125,25)"/><text x="62.6211%" y="543.50">alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amorti..</text></g><g><title>alloc::raw_vec::finish_grow (49 samples, 25.26%)</title><rect x="62.3711%" y="517" width="25.2577%" height="15" fill="rgb(210,195,18)"/><text x="62.6211%" y="527.50">alloc::raw_vec::finish_grow</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (49 samples, 25.26%)</title><rect x="62.3711%" y="501" width="25.2577%" height="15" fill="rgb(249,80,12)"/><text x="62.6211%" y="511.50">&lt;alloc::alloc::Global as core::alloc::Al..</text></g><g><title>alloc::alloc::Global::grow_impl (49 samples, 25.26%)</title><rect x="62.3711%" y="485" width="25.2577%" height="15" fill="rgb(221,65,9)"/><text x="62.6211%" y="495.50">alloc::alloc::Global::grow_impl</text></g><g><title>alloc::alloc::realloc (49 samples, 25.26%)</title><rect x="62.3711%" y="469" width="25.2577%" height="15" fill="rgb(235,49,36)"/><text x="62.6211%" y="479.50">alloc::alloc::realloc</text></g><g><title>__GI___libc_realloc (49 samples, 25.26%)</title><rect x="62.3711%" y="453" width="25.2577%" height="15" fill="rgb(225,32,20)"/><text x="62.6211%" y="463.50">__GI___libc_realloc</text></g><g><title>__lll_unlock_wake_private (5 samples, 2.58%)</title><rect x="85.0515%" y="437" width="2.5773%" height="15" fill="rgb(215,141,46)"/><text x="85.3015%" y="447.50">__..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="85.0515%" y="421" width="2.5773%" height="15" fill="rgb(250,160,47)"/><text x="85.3015%" y="431.50">[u..</text></g><g><title>[unknown] (3 samples, 1.55%)</title><rect x="86.0825%" y="405" width="1.5464%" height="15" fill="rgb(216,222,40)"/><text x="86.3325%" y="415.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="86.5979%" y="389" width="1.0309%" height="15" fill="rgb(234,217,39)"/><text x="86.8479%" y="399.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="86.5979%" y="373" width="1.0309%" height="15" fill="rgb(207,178,40)"/><text x="86.8479%" y="383.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="86.5979%" y="357" width="1.0309%" height="15" fill="rgb(221,136,13)"/><text x="86.8479%" y="367.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="86.5979%" y="341" width="1.0309%" height="15" fill="rgb(249,199,10)"/><text x="86.8479%" y="351.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="86.5979%" y="325" width="1.0309%" height="15" fill="rgb(249,222,13)"/><text x="86.8479%" y="335.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="86.5979%" y="309" width="1.0309%" height="15" fill="rgb(244,185,38)"/><text x="86.8479%" y="319.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="86.5979%" y="293" width="1.0309%" height="15" fill="rgb(236,202,9)"/><text x="86.8479%" y="303.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="86.5979%" y="277" width="1.0309%" height="15" fill="rgb(250,229,37)"/><text x="86.8479%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="87.1134%" y="261" width="0.5155%" height="15" fill="rgb(206,174,23)"/><text x="87.3634%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="87.1134%" y="245" width="0.5155%" height="15" fill="rgb(211,33,43)"/><text x="87.3634%" y="255.50"></text></g><g><title>lab4::checksum::Checksum::update (55 samples, 28.35%)</title><rect x="59.7938%" y="789" width="28.3505%" height="15" fill="rgb(245,58,50)"/><text x="60.0438%" y="799.50">lab4::checksum::Checksum::update</text></g><g><title>hex::encode (1 samples, 0.52%)</title><rect x="87.6289%" y="773" width="0.5155%" height="15" fill="rgb(244,68,36)"/><text x="87.8789%" y="783.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (1 samples, 0.52%)</title><rect x="87.6289%" y="757" width="0.5155%" height="15" fill="rgb(232,229,15)"/><text x="87.8789%" y="767.50"></text></g><g><title>hex::encode_to_iter (1 samples, 0.52%)</title><rect x="87.6289%" y="741" width="0.5155%" height="15" fill="rgb(254,30,23)"/><text x="87.8789%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.52%)</title><rect x="87.6289%" y="725" width="0.5155%" height="15" fill="rgb(235,160,14)"/><text x="87.8789%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.52%)</title><rect x="87.6289%" y="709" width="0.5155%" height="15" fill="rgb(212,155,44)"/><text x="87.8789%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.52%)</title><rect x="87.6289%" y="693" width="0.5155%" height="15" fill="rgb(226,2,50)"/><text x="87.8789%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.52%)</title><rect x="87.6289%" y="677" width="0.5155%" height="15" fill="rgb(234,177,6)"/><text x="87.8789%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.52%)</title><rect x="87.6289%" y="661" width="0.5155%" height="15" fill="rgb(217,24,9)"/><text x="87.8789%" y="671.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.52%)</title><rect x="87.6289%" y="645" width="0.5155%" height="15" fill="rgb(220,13,46)"/><text x="87.8789%" y="655.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.52%)</title><rect x="88.1443%" y="597" width="0.5155%" height="15" fill="rgb(239,221,27)"/><text x="88.3943%" y="607.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.52%)</title><rect x="88.1443%" y="581" width="0.5155%" height="15" fill="rgb(222,198,25)"/><text x="88.3943%" y="591.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (2 samples, 1.03%)</title><rect x="88.1443%" y="773" width="1.0309%" height="15" fill="rgb(211,99,13)"/><text x="88.3943%" y="783.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (2 samples, 1.03%)</title><rect x="88.1443%" y="757" width="1.0309%" height="15" fill="rgb(232,111,31)"/><text x="88.3943%" y="767.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (2 samples, 1.03%)</title><rect x="88.1443%" y="741" width="1.0309%" height="15" fill="rgb(245,82,37)"/><text x="88.3943%" y="751.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (2 samples, 1.03%)</title><rect x="88.1443%" y="725" width="1.0309%" height="15" fill="rgb(227,149,46)"/><text x="88.3943%" y="735.50"></text></g><g><title>sha2::sha256::Engine256::finish (2 samples, 1.03%)</title><rect x="88.1443%" y="709" width="1.0309%" height="15" fill="rgb(218,36,50)"/><text x="88.3943%" y="719.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (2 samples, 1.03%)</title><rect x="88.1443%" y="693" width="1.0309%" height="15" fill="rgb(226,80,48)"/><text x="88.3943%" y="703.50"></text></g><g><title>sha2::sha256::Engine256::finish::_{{closure}} (2 samples, 1.03%)</title><rect x="88.1443%" y="677" width="1.0309%" height="15" fill="rgb(238,224,15)"/><text x="88.3943%" y="687.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 1.03%)</title><rect x="88.1443%" y="661" width="1.0309%" height="15" fill="rgb(241,136,10)"/><text x="88.3943%" y="671.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 1.03%)</title><rect x="88.1443%" y="645" width="1.0309%" height="15" fill="rgb(208,32,45)"/><text x="88.3943%" y="655.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 1.03%)</title><rect x="88.1443%" y="629" width="1.0309%" height="15" fill="rgb(207,135,9)"/><text x="88.3943%" y="639.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 1.03%)</title><rect x="88.1443%" y="613" width="1.0309%" height="15" fill="rgb(206,86,44)"/><text x="88.3943%" y="623.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.52%)</title><rect x="88.6598%" y="597" width="0.5155%" height="15" fill="rgb(245,177,15)"/><text x="88.9098%" y="607.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.52%)</title><rect x="88.6598%" y="581" width="0.5155%" height="15" fill="rgb(206,64,50)"/><text x="88.9098%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (128 samples, 65.98%)</title><rect x="23.7113%" y="997" width="65.9794%" height="15" fill="rgb(234,36,40)"/><text x="23.9613%" y="1007.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (128 samples, 65.98%)</title><rect x="23.7113%" y="981" width="65.9794%" height="15" fill="rgb(213,64,8)"/><text x="23.9613%" y="991.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (128 samples, 65.98%)</title><rect x="23.7113%" y="965" width="65.9794%" height="15" fill="rgb(210,75,36)"/><text x="23.9613%" y="975.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (128 samples, 65.98%)</title><rect x="23.7113%" y="949" width="65.9794%" height="15" fill="rgb(229,88,21)"/><text x="23.9613%" y="959.50">std::thread::Builder::spawn_unchecked::_{{closure}}</text></g><g><title>std::panic::catch_unwind (128 samples, 65.98%)</title><rect x="23.7113%" y="933" width="65.9794%" height="15" fill="rgb(252,204,47)"/><text x="23.9613%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (128 samples, 65.98%)</title><rect x="23.7113%" y="917" width="65.9794%" height="15" fill="rgb(208,77,27)"/><text x="23.9613%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (128 samples, 65.98%)</title><rect x="23.7113%" y="901" width="65.9794%" height="15" fill="rgb(221,76,26)"/><text x="23.9613%" y="911.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (128 samples, 65.98%)</title><rect x="23.7113%" y="885" width="65.9794%" height="15" fill="rgb(225,139,18)"/><text x="23.9613%" y="895.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (128 samples, 65.98%)</title><rect x="23.7113%" y="869" width="65.9794%" height="15" fill="rgb(230,137,11)"/><text x="23.9613%" y="879.50">std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (128 samples, 65.98%)</title><rect x="23.7113%" y="853" width="65.9794%" height="15" fill="rgb(212,28,1)"/><text x="23.9613%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::_{{closure}} (128 samples, 65.98%)</title><rect x="23.7113%" y="837" width="65.9794%" height="15" fill="rgb(248,164,17)"/><text x="23.9613%" y="847.50">lab4::hackathon::_{{closure}}</text></g><g><title>lab4::student::Student::run (106 samples, 54.64%)</title><rect x="35.0515%" y="821" width="54.6392%" height="15" fill="rgb(222,171,42)"/><text x="35.3015%" y="831.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (58 samples, 29.90%)</title><rect x="59.7938%" y="805" width="29.8969%" height="15" fill="rgb(243,84,45)"/><text x="60.0438%" y="815.50">lab4::student::Student::build_idea</text></g><g><title>lab4::checksum::Checksum::with_sha256 (3 samples, 1.55%)</title><rect x="88.1443%" y="789" width="1.5464%" height="15" fill="rgb(252,49,23)"/><text x="88.3943%" y="799.50"></text></g><g><title>hex::encode (1 samples, 0.52%)</title><rect x="89.1753%" y="773" width="0.5155%" height="15" fill="rgb(215,19,7)"/><text x="89.4253%" y="783.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (1 samples, 0.52%)</title><rect x="89.1753%" y="757" width="0.5155%" height="15" fill="rgb(238,81,41)"/><text x="89.4253%" y="767.50"></text></g><g><title>hex::encode_to_iter (1 samples, 0.52%)</title><rect x="89.1753%" y="741" width="0.5155%" height="15" fill="rgb(210,199,37)"/><text x="89.4253%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.52%)</title><rect x="89.1753%" y="725" width="0.5155%" height="15" fill="rgb(244,192,49)"/><text x="89.4253%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.52%)</title><rect x="89.1753%" y="709" width="0.5155%" height="15" fill="rgb(226,211,11)"/><text x="89.4253%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.52%)</title><rect x="89.1753%" y="693" width="0.5155%" height="15" fill="rgb(236,162,54)"/><text x="89.4253%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.52%)</title><rect x="89.1753%" y="677" width="0.5155%" height="15" fill="rgb(220,229,9)"/><text x="89.4253%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.52%)</title><rect x="89.1753%" y="661" width="0.5155%" height="15" fill="rgb(250,87,22)"/><text x="89.4253%" y="671.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.52%)</title><rect x="89.1753%" y="645" width="0.5155%" height="15" fill="rgb(239,43,17)"/><text x="89.4253%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.52%)</title><rect x="89.1753%" y="629" width="0.5155%" height="15" fill="rgb(231,177,25)"/><text x="89.4253%" y="639.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (1 samples, 0.52%)</title><rect x="89.1753%" y="613" width="0.5155%" height="15" fill="rgb(219,179,1)"/><text x="89.4253%" y="623.50"></text></g><g><title>__GI___mmap64 (6 samples, 3.09%)</title><rect x="89.6907%" y="933" width="3.0928%" height="15" fill="rgb(238,219,53)"/><text x="89.9407%" y="943.50">__G..</text></g><g><title>[unknown] (6 samples, 3.09%)</title><rect x="89.6907%" y="917" width="3.0928%" height="15" fill="rgb(232,167,36)"/><text x="89.9407%" y="927.50">[un..</text></g><g><title>[unknown] (6 samples, 3.09%)</title><rect x="89.6907%" y="901" width="3.0928%" height="15" fill="rgb(244,19,51)"/><text x="89.9407%" y="911.50">[un..</text></g><g><title>[unknown] (6 samples, 3.09%)</title><rect x="89.6907%" y="885" width="3.0928%" height="15" fill="rgb(224,6,22)"/><text x="89.9407%" y="895.50">[un..</text></g><g><title>[unknown] (6 samples, 3.09%)</title><rect x="89.6907%" y="869" width="3.0928%" height="15" fill="rgb(224,145,5)"/><text x="89.9407%" y="879.50">[un..</text></g><g><title>[unknown] (6 samples, 3.09%)</title><rect x="89.6907%" y="853" width="3.0928%" height="15" fill="rgb(234,130,49)"/><text x="89.9407%" y="863.50">[un..</text></g><g><title>[unknown] (6 samples, 3.09%)</title><rect x="89.6907%" y="837" width="3.0928%" height="15" fill="rgb(254,6,2)"/><text x="89.9407%" y="847.50">[un..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="90.2062%" y="821" width="2.5773%" height="15" fill="rgb(208,96,46)"/><text x="90.4562%" y="831.50">[u..</text></g><g><title>[unknown] (4 samples, 2.06%)</title><rect x="90.7216%" y="805" width="2.0619%" height="15" fill="rgb(239,3,39)"/><text x="90.9716%" y="815.50">[..</text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="91.7526%" y="789" width="1.0309%" height="15" fill="rgb(233,210,1)"/><text x="92.0026%" y="799.50"></text></g><g><title>__GI___clone (176 samples, 90.72%)</title><rect x="3.0928%" y="1045" width="90.7216%" height="15" fill="rgb(244,137,37)"/><text x="3.3428%" y="1055.50">__GI___clone</text></g><g><title>start_thread (136 samples, 70.10%)</title><rect x="23.7113%" y="1029" width="70.1031%" height="15" fill="rgb(240,136,2)"/><text x="23.9613%" y="1039.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (136 samples, 70.10%)</title><rect x="23.7113%" y="1013" width="70.1031%" height="15" fill="rgb(239,18,37)"/><text x="23.9613%" y="1023.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (8 samples, 4.12%)</title><rect x="89.6907%" y="997" width="4.1237%" height="15" fill="rgb(218,185,22)"/><text x="89.9407%" y="1007.50">std:..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (8 samples, 4.12%)</title><rect x="89.6907%" y="981" width="4.1237%" height="15" fill="rgb(225,218,4)"/><text x="89.9407%" y="991.50">std:..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (8 samples, 4.12%)</title><rect x="89.6907%" y="965" width="4.1237%" height="15" fill="rgb(230,182,32)"/><text x="89.9407%" y="975.50">std:..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (8 samples, 4.12%)</title><rect x="89.6907%" y="949" width="4.1237%" height="15" fill="rgb(242,56,43)"/><text x="89.9407%" y="959.50">std:..</text></g><g><title>__GI___mprotect (2 samples, 1.03%)</title><rect x="92.7835%" y="933" width="1.0309%" height="15" fill="rgb(233,99,24)"/><text x="93.0335%" y="943.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="92.7835%" y="917" width="1.0309%" height="15" fill="rgb(234,209,42)"/><text x="93.0335%" y="927.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="92.7835%" y="901" width="1.0309%" height="15" fill="rgb(227,7,12)"/><text x="93.0335%" y="911.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="92.7835%" y="885" width="1.0309%" height="15" fill="rgb(245,203,43)"/><text x="93.0335%" y="895.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="92.7835%" y="869" width="1.0309%" height="15" fill="rgb(238,205,33)"/><text x="93.0335%" y="879.50"></text></g><g><title>[unknown] (2 samples, 1.03%)</title><rect x="92.7835%" y="853" width="1.0309%" height="15" fill="rgb(231,56,7)"/><text x="93.0335%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="93.2990%" y="837" width="0.5155%" height="15" fill="rgb(244,186,29)"/><text x="93.5490%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="93.2990%" y="821" width="0.5155%" height="15" fill="rgb(234,111,31)"/><text x="93.5490%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="93.2990%" y="805" width="0.5155%" height="15" fill="rgb(241,149,10)"/><text x="93.5490%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 2.58%)</title><rect x="93.8144%" y="837" width="2.5773%" height="15" fill="rgb(249,206,44)"/><text x="94.0644%" y="847.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 2.58%)</title><rect x="93.8144%" y="821" width="2.5773%" height="15" fill="rgb(251,153,30)"/><text x="94.0644%" y="831.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 2.58%)</title><rect x="93.8144%" y="805" width="2.5773%" height="15" fill="rgb(239,152,38)"/><text x="94.0644%" y="815.50">co..</text></g><g><title>lab4::hackathon::_{{closure}} (5 samples, 2.58%)</title><rect x="93.8144%" y="789" width="2.5773%" height="15" fill="rgb(249,139,47)"/><text x="94.0644%" y="799.50">la..</text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (5 samples, 2.58%)</title><rect x="93.8144%" y="773" width="2.5773%" height="15" fill="rgb(244,64,35)"/><text x="94.0644%" y="783.50">st..</text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (5 samples, 2.58%)</title><rect x="93.8144%" y="757" width="2.5773%" height="15" fill="rgb(216,46,15)"/><text x="94.0644%" y="767.50">st..</text></g><g><title>std::sys::unix::thread::Thread::join (5 samples, 2.58%)</title><rect x="93.8144%" y="741" width="2.5773%" height="15" fill="rgb(250,74,19)"/><text x="94.0644%" y="751.50">st..</text></g><g><title>__GI___pthread_timedjoin_ex (5 samples, 2.58%)</title><rect x="93.8144%" y="725" width="2.5773%" height="15" fill="rgb(249,42,33)"/><text x="94.0644%" y="735.50">__..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="93.8144%" y="709" width="2.5773%" height="15" fill="rgb(242,149,17)"/><text x="94.0644%" y="719.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="93.8144%" y="693" width="2.5773%" height="15" fill="rgb(244,29,21)"/><text x="94.0644%" y="703.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="93.8144%" y="677" width="2.5773%" height="15" fill="rgb(220,130,37)"/><text x="94.0644%" y="687.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="93.8144%" y="661" width="2.5773%" height="15" fill="rgb(211,67,2)"/><text x="94.0644%" y="671.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="93.8144%" y="645" width="2.5773%" height="15" fill="rgb(235,68,52)"/><text x="94.0644%" y="655.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="93.8144%" y="629" width="2.5773%" height="15" fill="rgb(246,142,3)"/><text x="94.0644%" y="639.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="93.8144%" y="613" width="2.5773%" height="15" fill="rgb(241,25,7)"/><text x="94.0644%" y="623.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="93.8144%" y="597" width="2.5773%" height="15" fill="rgb(242,119,39)"/><text x="94.0644%" y="607.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="93.8144%" y="581" width="2.5773%" height="15" fill="rgb(241,98,45)"/><text x="94.0644%" y="591.50">[u..</text></g><g><title>[unknown] (4 samples, 2.06%)</title><rect x="94.3299%" y="565" width="2.0619%" height="15" fill="rgb(254,28,30)"/><text x="94.5799%" y="575.50">[..</text></g><g><title>[unknown] (4 samples, 2.06%)</title><rect x="94.3299%" y="549" width="2.0619%" height="15" fill="rgb(241,142,54)"/><text x="94.5799%" y="559.50">[..</text></g><g><title>[unknown] (4 samples, 2.06%)</title><rect x="94.3299%" y="533" width="2.0619%" height="15" fill="rgb(222,85,15)"/><text x="94.5799%" y="543.50">[..</text></g><g><title>[unknown] (4 samples, 2.06%)</title><rect x="94.3299%" y="517" width="2.0619%" height="15" fill="rgb(210,85,47)"/><text x="94.5799%" y="527.50">[..</text></g><g><title>[unknown] (4 samples, 2.06%)</title><rect x="94.3299%" y="501" width="2.0619%" height="15" fill="rgb(224,206,25)"/><text x="94.5799%" y="511.50">[..</text></g><g><title>__libc_start_main (6 samples, 3.09%)</title><rect x="93.8144%" y="1029" width="3.0928%" height="15" fill="rgb(243,201,19)"/><text x="94.0644%" y="1039.50">__l..</text></g><g><title>main (6 samples, 3.09%)</title><rect x="93.8144%" y="1013" width="3.0928%" height="15" fill="rgb(236,59,4)"/><text x="94.0644%" y="1023.50">main</text></g><g><title>std::rt::lang_start_internal (6 samples, 3.09%)</title><rect x="93.8144%" y="997" width="3.0928%" height="15" fill="rgb(254,179,45)"/><text x="94.0644%" y="1007.50">std..</text></g><g><title>std::panic::catch_unwind (6 samples, 3.09%)</title><rect x="93.8144%" y="981" width="3.0928%" height="15" fill="rgb(226,14,10)"/><text x="94.0644%" y="991.50">std..</text></g><g><title>std::panicking::try (6 samples, 3.09%)</title><rect x="93.8144%" y="965" width="3.0928%" height="15" fill="rgb(244,27,41)"/><text x="94.0644%" y="975.50">std..</text></g><g><title>std::panicking::try::do_call (6 samples, 3.09%)</title><rect x="93.8144%" y="949" width="3.0928%" height="15" fill="rgb(235,35,32)"/><text x="94.0644%" y="959.50">std..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 3.09%)</title><rect x="93.8144%" y="933" width="3.0928%" height="15" fill="rgb(218,68,31)"/><text x="94.0644%" y="943.50">cor..</text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 3.09%)</title><rect x="93.8144%" y="917" width="3.0928%" height="15" fill="rgb(207,120,37)"/><text x="94.0644%" y="927.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 3.09%)</title><rect x="93.8144%" y="901" width="3.0928%" height="15" fill="rgb(227,98,0)"/><text x="94.0644%" y="911.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 3.09%)</title><rect x="93.8144%" y="885" width="3.0928%" height="15" fill="rgb(207,7,3)"/><text x="94.0644%" y="895.50">cor..</text></g><g><title>lab4::main (6 samples, 3.09%)</title><rect x="93.8144%" y="869" width="3.0928%" height="15" fill="rgb(206,98,19)"/><text x="94.0644%" y="879.50">lab..</text></g><g><title>lab4::hackathon (6 samples, 3.09%)</title><rect x="93.8144%" y="853" width="3.0928%" height="15" fill="rgb(217,5,26)"/><text x="94.0644%" y="863.50">lab..</text></g><g><title>std::io::stdio::_print (1 samples, 0.52%)</title><rect x="96.3918%" y="837" width="0.5155%" height="15" fill="rgb(235,190,38)"/><text x="96.6418%" y="847.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.52%)</title><rect x="96.3918%" y="821" width="0.5155%" height="15" fill="rgb(247,86,24)"/><text x="96.6418%" y="831.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.52%)</title><rect x="96.3918%" y="805" width="0.5155%" height="15" fill="rgb(205,101,16)"/><text x="96.6418%" y="815.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.52%)</title><rect x="96.3918%" y="789" width="0.5155%" height="15" fill="rgb(246,168,33)"/><text x="96.6418%" y="799.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.52%)</title><rect x="96.3918%" y="773" width="0.5155%" height="15" fill="rgb(231,114,1)"/><text x="96.6418%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.52%)</title><rect x="96.3918%" y="757" width="0.5155%" height="15" fill="rgb(207,184,53)"/><text x="96.6418%" y="767.50"></text></g><g><title>&lt;lab4::checksum::Checksum as core::fmt::Display&gt;::fmt (1 samples, 0.52%)</title><rect x="96.3918%" y="741" width="0.5155%" height="15" fill="rgb(224,95,51)"/><text x="96.6418%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.52%)</title><rect x="96.3918%" y="725" width="0.5155%" height="15" fill="rgb(212,188,45)"/><text x="96.6418%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.52%)</title><rect x="96.3918%" y="709" width="0.5155%" height="15" fill="rgb(223,154,38)"/><text x="96.6418%" y="719.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.52%)</title><rect x="96.3918%" y="693" width="0.5155%" height="15" fill="rgb(251,22,52)"/><text x="96.6418%" y="703.50"></text></g><g><title>lab4 (189 samples, 97.42%)</title><rect x="0.0000%" y="1061" width="97.4227%" height="15" fill="rgb(229,209,22)"/><text x="0.2500%" y="1071.50">lab4</text></g><g><title>_start (7 samples, 3.61%)</title><rect x="93.8144%" y="1045" width="3.6082%" height="15" fill="rgb(234,138,34)"/><text x="94.0644%" y="1055.50">_sta..</text></g><g><title>_dl_start (1 samples, 0.52%)</title><rect x="96.9072%" y="1029" width="0.5155%" height="15" fill="rgb(212,95,11)"/><text x="97.1572%" y="1039.50"></text></g><g><title>_dl_start_final (1 samples, 0.52%)</title><rect x="96.9072%" y="1013" width="0.5155%" height="15" fill="rgb(240,179,47)"/><text x="97.1572%" y="1023.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.52%)</title><rect x="96.9072%" y="997" width="0.5155%" height="15" fill="rgb(240,163,11)"/><text x="97.1572%" y="1007.50"></text></g><g><title>dl_main (1 samples, 0.52%)</title><rect x="96.9072%" y="981" width="0.5155%" height="15" fill="rgb(236,37,12)"/><text x="97.1572%" y="991.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.52%)</title><rect x="96.9072%" y="965" width="0.5155%" height="15" fill="rgb(232,164,16)"/><text x="97.1572%" y="975.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.52%)</title><rect x="96.9072%" y="949" width="0.5155%" height="15" fill="rgb(244,205,15)"/><text x="97.1572%" y="959.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 0.52%)</title><rect x="96.9072%" y="933" width="0.5155%" height="15" fill="rgb(223,117,47)"/><text x="97.1572%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="96.9072%" y="917" width="0.5155%" height="15" fill="rgb(244,107,35)"/><text x="97.1572%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.52%)</title><rect x="96.9072%" y="901" width="0.5155%" height="15" fill="rgb(205,140,8)"/><text x="97.1572%" y="911.50"></text></g><g><title>all (194 samples, 100%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(228,84,46)"/><text x="0.2500%" y="1087.50"></text></g><g><title>perf (5 samples, 2.58%)</title><rect x="97.4227%" y="1061" width="2.5773%" height="15" fill="rgb(254,188,9)"/><text x="97.6727%" y="1071.50">pe..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="1045" width="2.5773%" height="15" fill="rgb(206,112,54)"/><text x="97.6727%" y="1055.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="1029" width="2.5773%" height="15" fill="rgb(216,84,49)"/><text x="97.6727%" y="1039.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="1013" width="2.5773%" height="15" fill="rgb(214,194,35)"/><text x="97.6727%" y="1023.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="997" width="2.5773%" height="15" fill="rgb(249,28,3)"/><text x="97.6727%" y="1007.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="981" width="2.5773%" height="15" fill="rgb(222,56,52)"/><text x="97.6727%" y="991.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="965" width="2.5773%" height="15" fill="rgb(245,217,50)"/><text x="97.6727%" y="975.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="949" width="2.5773%" height="15" fill="rgb(213,201,24)"/><text x="97.6727%" y="959.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="933" width="2.5773%" height="15" fill="rgb(248,116,28)"/><text x="97.6727%" y="943.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="917" width="2.5773%" height="15" fill="rgb(219,72,43)"/><text x="97.6727%" y="927.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="901" width="2.5773%" height="15" fill="rgb(209,138,14)"/><text x="97.6727%" y="911.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="885" width="2.5773%" height="15" fill="rgb(222,18,33)"/><text x="97.6727%" y="895.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="869" width="2.5773%" height="15" fill="rgb(213,199,7)"/><text x="97.6727%" y="879.50">[u..</text></g><g><title>[unknown] (5 samples, 2.58%)</title><rect x="97.4227%" y="853" width="2.5773%" height="15" fill="rgb(250,110,10)"/><text x="97.6727%" y="863.50">[u..</text></g></svg></svg>